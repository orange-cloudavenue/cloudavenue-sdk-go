// Code generated by MockGen. DO NOT EDIT.
// Source: user_models.go
//
// Generated by this command:
//
//	mockgen -source=user_models.go -destination=mock/zz_generated_user_client.go
//

// Package mock_iam is a generated GoMock package.
package mock_iam

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockuserInterface is a mock of userInterface interface.
type MockuserInterface struct {
	ctrl     *gomock.Controller
	recorder *MockuserInterfaceMockRecorder
	isgomock struct{}
}

// MockuserInterfaceMockRecorder is the mock recorder for MockuserInterface.
type MockuserInterfaceMockRecorder struct {
	mock *MockuserInterface
}

// NewMockuserInterface creates a new mock instance.
func NewMockuserInterface(ctrl *gomock.Controller) *MockuserInterface {
	mock := &MockuserInterface{ctrl: ctrl}
	mock.recorder = &MockuserInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserInterface) EXPECT() *MockuserInterfaceMockRecorder {
	return m.recorder
}

// GetRoleName mocks base method.
func (m *MockuserInterface) GetRoleName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoleName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRoleName indicates an expected call of GetRoleName.
func (mr *MockuserInterfaceMockRecorder) GetRoleName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoleName", reflect.TypeOf((*MockuserInterface)(nil).GetRoleName))
}
